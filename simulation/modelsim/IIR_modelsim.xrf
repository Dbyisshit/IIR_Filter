vendor_name = ModelSim
source_file = 1, E:/FPGA/Quartus/Projects/DAI_ZUO/IIR/top_tb.v
source_file = 1, E:/FPGA/Quartus/Projects/DAI_ZUO/IIR/top.v
source_file = 1, E:/FPGA/Quartus/Projects/DAI_ZUO/IIR/clock_divider.v
source_file = 1, E:/FPGA/Quartus/Projects/DAI_ZUO/IIR/IIR_tb.v
source_file = 1, E:/FPGA/Quartus/Projects/DAI_ZUO/IIR/IIR.v
source_file = 1, c:/users/dingboyuan/documents/matlab/iir/bin_s.txt
source_file = 1, e:/fpga/quartus/quartus/libraries/megafunctions/altshift_taps.tdf
source_file = 1, e:/fpga/quartus/quartus/libraries/megafunctions/altdpram.inc
source_file = 1, e:/fpga/quartus/quartus/libraries/megafunctions/lpm_counter.inc
source_file = 1, e:/fpga/quartus/quartus/libraries/megafunctions/lpm_compare.inc
source_file = 1, e:/fpga/quartus/quartus/libraries/megafunctions/lpm_constant.inc
source_file = 1, e:/fpga/quartus/quartus/libraries/megafunctions/cbx.lst
source_file = 1, E:/FPGA/Quartus/Projects/DAI_ZUO/IIR/db/shift_taps_0jm.tdf
source_file = 1, E:/FPGA/Quartus/Projects/DAI_ZUO/IIR/db/altsyncram_uua1.tdf
source_file = 1, E:/FPGA/Quartus/Projects/DAI_ZUO/IIR/db/cntr_4pf.tdf
source_file = 1, E:/FPGA/Quartus/Projects/DAI_ZUO/IIR/db/cntr_r8h.tdf
design_name = top
instance = comp, \data_out_8bit[0]~output , data_out_8bit[0]~output, top, 1
instance = comp, \data_out_8bit[1]~output , data_out_8bit[1]~output, top, 1
instance = comp, \data_out_8bit[2]~output , data_out_8bit[2]~output, top, 1
instance = comp, \data_out_8bit[3]~output , data_out_8bit[3]~output, top, 1
instance = comp, \data_out_8bit[4]~output , data_out_8bit[4]~output, top, 1
instance = comp, \data_out_8bit[5]~output , data_out_8bit[5]~output, top, 1
instance = comp, \data_out_8bit[6]~output , data_out_8bit[6]~output, top, 1
instance = comp, \data_out_8bit[7]~output , data_out_8bit[7]~output, top, 1
instance = comp, \dac_clk~output , dac_clk~output, top, 1
instance = comp, \adc_clk~output , adc_clk~output, top, 1
instance = comp, \sys_clk~input , sys_clk~input, top, 1
instance = comp, \sys_clk~inputclkctrl , sys_clk~inputclkctrl, top, 1
instance = comp, \clock_divider_1|Add0~0 , clock_divider_1|Add0~0, top, 1
instance = comp, \rst_n~input , rst_n~input, top, 1
instance = comp, \rst_n~inputclkctrl , rst_n~inputclkctrl, top, 1
instance = comp, \clock_divider_1|counter[0] , clock_divider_1|counter[0], top, 1
instance = comp, \clock_divider_1|Add0~2 , clock_divider_1|Add0~2, top, 1
instance = comp, \clock_divider_1|counter[1] , clock_divider_1|counter[1], top, 1
instance = comp, \clock_divider_1|Equal0~2 , clock_divider_1|Equal0~2, top, 1
instance = comp, \clock_divider_1|Add0~4 , clock_divider_1|Add0~4, top, 1
instance = comp, \clock_divider_1|Add0~6 , clock_divider_1|Add0~6, top, 1
instance = comp, \clock_divider_1|counter[3] , clock_divider_1|counter[3], top, 1
instance = comp, \clock_divider_1|Add0~8 , clock_divider_1|Add0~8, top, 1
instance = comp, \clock_divider_1|counter~4 , clock_divider_1|counter~4, top, 1
instance = comp, \clock_divider_1|counter[4] , clock_divider_1|counter[4], top, 1
instance = comp, \clock_divider_1|Add0~10 , clock_divider_1|Add0~10, top, 1
instance = comp, \clock_divider_1|counter~3 , clock_divider_1|counter~3, top, 1
instance = comp, \clock_divider_1|counter[5] , clock_divider_1|counter[5], top, 1
instance = comp, \clock_divider_1|Add0~12 , clock_divider_1|Add0~12, top, 1
instance = comp, \clock_divider_1|counter~2 , clock_divider_1|counter~2, top, 1
instance = comp, \clock_divider_1|counter[6] , clock_divider_1|counter[6], top, 1
instance = comp, \clock_divider_1|Add0~14 , clock_divider_1|Add0~14, top, 1
instance = comp, \clock_divider_1|counter~1 , clock_divider_1|counter~1, top, 1
instance = comp, \clock_divider_1|counter[7] , clock_divider_1|counter[7], top, 1
instance = comp, \clock_divider_1|Add0~16 , clock_divider_1|Add0~16, top, 1
instance = comp, \clock_divider_1|counter~0 , clock_divider_1|counter~0, top, 1
instance = comp, \clock_divider_1|counter[8] , clock_divider_1|counter[8], top, 1
instance = comp, \clock_divider_1|Add0~18 , clock_divider_1|Add0~18, top, 1
instance = comp, \clock_divider_1|counter[9] , clock_divider_1|counter[9], top, 1
instance = comp, \clock_divider_1|Equal0~0 , clock_divider_1|Equal0~0, top, 1
instance = comp, \clock_divider_1|counter~5 , clock_divider_1|counter~5, top, 1
instance = comp, \clock_divider_1|counter[2] , clock_divider_1|counter[2], top, 1
instance = comp, \clock_divider_1|Equal0~1 , clock_divider_1|Equal0~1, top, 1
instance = comp, \clock_divider_1|clk_50kHz~0 , clock_divider_1|clk_50kHz~0, top, 1
instance = comp, \clock_divider_1|clk_50kHz~feeder , clock_divider_1|clk_50kHz~feeder, top, 1
instance = comp, \clock_divider_1|clk_50kHz , clock_divider_1|clk_50kHz, top, 1
instance = comp, \clock_divider_1|clk_50kHz~clkctrl , clock_divider_1|clk_50kHz~clkctrl, top, 1
instance = comp, \IIR_inst0|sample_in_rtl_0|auto_generated|cntr3|counter_comb_bita0 , IIR_inst0|sample_in_rtl_0|auto_generated|cntr3|counter_comb_bita0, top, 1
instance = comp, \IIR_inst0|sample_in_rtl_0|auto_generated|cntr3|counter_reg_bit[0] , IIR_inst0|sample_in_rtl_0|auto_generated|cntr3|counter_reg_bit[0], top, 1
instance = comp, \IIR_inst0|sample_in_rtl_0|auto_generated|cntr3|counter_comb_bita1 , IIR_inst0|sample_in_rtl_0|auto_generated|cntr3|counter_comb_bita1, top, 1
instance = comp, \IIR_inst0|sample_in_rtl_0|auto_generated|cntr3|counter_reg_bit[1] , IIR_inst0|sample_in_rtl_0|auto_generated|cntr3|counter_reg_bit[1], top, 1
instance = comp, \IIR_inst0|sample_in_rtl_0|auto_generated|cntr3|counter_comb_bita1~0 , IIR_inst0|sample_in_rtl_0|auto_generated|cntr3|counter_comb_bita1~0, top, 1
instance = comp, \IIR_inst0|sample_in_rtl_0|auto_generated|dffe4~feeder , IIR_inst0|sample_in_rtl_0|auto_generated|dffe4~feeder, top, 1
instance = comp, \IIR_inst0|sample_in_rtl_0|auto_generated|dffe4 , IIR_inst0|sample_in_rtl_0|auto_generated|dffe4, top, 1
instance = comp, \data_8bit_in[0]~input , data_8bit_in[0]~input, top, 1
instance = comp, \IIR_inst0|sample_in[1][8]~feeder , IIR_inst0|sample_in[1][8]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[1][8] , IIR_inst0|sample_in[1][8], top, 1
instance = comp, \IIR_inst0|sample_in_rtl_0|auto_generated|cntr1|counter_comb_bita0 , IIR_inst0|sample_in_rtl_0|auto_generated|cntr1|counter_comb_bita0, top, 1
instance = comp, \IIR_inst0|sample_in_rtl_0|auto_generated|cntr1|counter_reg_bit[0] , IIR_inst0|sample_in_rtl_0|auto_generated|cntr1|counter_reg_bit[0], top, 1
instance = comp, \data_8bit_in[1]~input , data_8bit_in[1]~input, top, 1
instance = comp, \IIR_inst0|sample_in[1][9]~feeder , IIR_inst0|sample_in[1][9]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[1][9] , IIR_inst0|sample_in[1][9], top, 1
instance = comp, \data_8bit_in[2]~input , data_8bit_in[2]~input, top, 1
instance = comp, \IIR_inst0|sample_in[1][10] , IIR_inst0|sample_in[1][10], top, 1
instance = comp, \data_8bit_in[3]~input , data_8bit_in[3]~input, top, 1
instance = comp, \IIR_inst0|sample_in[1][11]~feeder , IIR_inst0|sample_in[1][11]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[1][11] , IIR_inst0|sample_in[1][11], top, 1
instance = comp, \data_8bit_in[4]~input , data_8bit_in[4]~input, top, 1
instance = comp, \IIR_inst0|sample_in[1][12] , IIR_inst0|sample_in[1][12], top, 1
instance = comp, \data_8bit_in[5]~input , data_8bit_in[5]~input, top, 1
instance = comp, \IIR_inst0|sample_in[1][13] , IIR_inst0|sample_in[1][13], top, 1
instance = comp, \data_8bit_in[6]~input , data_8bit_in[6]~input, top, 1
instance = comp, \IIR_inst0|sample_in[1][14]~feeder , IIR_inst0|sample_in[1][14]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[1][14] , IIR_inst0|sample_in[1][14], top, 1
instance = comp, \data_8bit_in[7]~input , data_8bit_in[7]~input, top, 1
instance = comp, \IIR_inst0|sample_in[1][15]~0 , IIR_inst0|sample_in[1][15]~0, top, 1
instance = comp, \IIR_inst0|sample_in[1][15] , IIR_inst0|sample_in[1][15], top, 1
instance = comp, \IIR_inst0|sample_in_rtl_0|auto_generated|altsyncram2|ram_block5a0 , IIR_inst0|sample_in_rtl_0|auto_generated|altsyncram2|ram_block5a0, top, 1
instance = comp, \IIR_inst0|sample_in[6][11] , IIR_inst0|sample_in[6][11], top, 1
instance = comp, \IIR_inst0|sample_in[7][11]~feeder , IIR_inst0|sample_in[7][11]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[7][11] , IIR_inst0|sample_in[7][11], top, 1
instance = comp, \IIR_inst0|sample_in[8][11]~feeder , IIR_inst0|sample_in[8][11]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[8][11] , IIR_inst0|sample_in[8][11], top, 1
instance = comp, \IIR_inst0|sample_in[9][11]~feeder , IIR_inst0|sample_in[9][11]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[9][11] , IIR_inst0|sample_in[9][11], top, 1
instance = comp, \IIR_inst0|sample_in[10][11]~feeder , IIR_inst0|sample_in[10][11]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[10][11] , IIR_inst0|sample_in[10][11], top, 1
instance = comp, \IIR_inst0|sample_in[11][11]~feeder , IIR_inst0|sample_in[11][11]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[11][11] , IIR_inst0|sample_in[11][11], top, 1
instance = comp, \IIR_inst0|sample_in[6][10] , IIR_inst0|sample_in[6][10], top, 1
instance = comp, \IIR_inst0|sample_in[7][10]~feeder , IIR_inst0|sample_in[7][10]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[7][10] , IIR_inst0|sample_in[7][10], top, 1
instance = comp, \IIR_inst0|sample_in[8][10] , IIR_inst0|sample_in[8][10], top, 1
instance = comp, \IIR_inst0|sample_in[6][9] , IIR_inst0|sample_in[6][9], top, 1
instance = comp, \IIR_inst0|sample_in[6][8] , IIR_inst0|sample_in[6][8], top, 1
instance = comp, \IIR_inst0|Add0~0 , IIR_inst0|Add0~0, top, 1
instance = comp, \IIR_inst0|Add0~2 , IIR_inst0|Add0~2, top, 1
instance = comp, \IIR_inst0|Add0~4 , IIR_inst0|Add0~4, top, 1
instance = comp, \IIR_inst0|Add0~6 , IIR_inst0|Add0~6, top, 1
instance = comp, \IIR_inst0|sample_in[7][9]~feeder , IIR_inst0|sample_in[7][9]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[7][9] , IIR_inst0|sample_in[7][9], top, 1
instance = comp, \IIR_inst0|sample_in[7][8] , IIR_inst0|sample_in[7][8], top, 1
instance = comp, \IIR_inst0|Add1~0 , IIR_inst0|Add1~0, top, 1
instance = comp, \IIR_inst0|Add1~2 , IIR_inst0|Add1~2, top, 1
instance = comp, \IIR_inst0|Add1~4 , IIR_inst0|Add1~4, top, 1
instance = comp, \IIR_inst0|sample_in[8][9]~feeder , IIR_inst0|sample_in[8][9]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[8][9] , IIR_inst0|sample_in[8][9], top, 1
instance = comp, \IIR_inst0|sample_in[8][8]~feeder , IIR_inst0|sample_in[8][8]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[8][8] , IIR_inst0|sample_in[8][8], top, 1
instance = comp, \IIR_inst0|Add2~0 , IIR_inst0|Add2~0, top, 1
instance = comp, \IIR_inst0|Add2~2 , IIR_inst0|Add2~2, top, 1
instance = comp, \IIR_inst0|Add2~4 , IIR_inst0|Add2~4, top, 1
instance = comp, \IIR_inst0|sample_in[9][10]~feeder , IIR_inst0|sample_in[9][10]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[9][10] , IIR_inst0|sample_in[9][10], top, 1
instance = comp, \IIR_inst0|sample_in[9][9]~feeder , IIR_inst0|sample_in[9][9]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[9][9] , IIR_inst0|sample_in[9][9], top, 1
instance = comp, \IIR_inst0|sample_in[9][8]~feeder , IIR_inst0|sample_in[9][8]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[9][8] , IIR_inst0|sample_in[9][8], top, 1
instance = comp, \IIR_inst0|Add3~0 , IIR_inst0|Add3~0, top, 1
instance = comp, \IIR_inst0|Add3~2 , IIR_inst0|Add3~2, top, 1
instance = comp, \IIR_inst0|Add3~4 , IIR_inst0|Add3~4, top, 1
instance = comp, \IIR_inst0|sample_in[10][10]~feeder , IIR_inst0|sample_in[10][10]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[10][10] , IIR_inst0|sample_in[10][10], top, 1
instance = comp, \IIR_inst0|sample_in[10][9] , IIR_inst0|sample_in[10][9], top, 1
instance = comp, \IIR_inst0|sample_in[10][8]~feeder , IIR_inst0|sample_in[10][8]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[10][8] , IIR_inst0|sample_in[10][8], top, 1
instance = comp, \IIR_inst0|Add4~0 , IIR_inst0|Add4~0, top, 1
instance = comp, \IIR_inst0|Add4~2 , IIR_inst0|Add4~2, top, 1
instance = comp, \IIR_inst0|Add4~4 , IIR_inst0|Add4~4, top, 1
instance = comp, \IIR_inst0|Add4~6 , IIR_inst0|Add4~6, top, 1
instance = comp, \IIR_inst0|sample_in[11][10] , IIR_inst0|sample_in[11][10], top, 1
instance = comp, \IIR_inst0|sample_in[11][9] , IIR_inst0|sample_in[11][9], top, 1
instance = comp, \IIR_inst0|sample_in[11][8] , IIR_inst0|sample_in[11][8], top, 1
instance = comp, \IIR_inst0|Add5~1 , IIR_inst0|Add5~1, top, 1
instance = comp, \IIR_inst0|Add5~3 , IIR_inst0|Add5~3, top, 1
instance = comp, \IIR_inst0|Add5~5 , IIR_inst0|Add5~5, top, 1
instance = comp, \IIR_inst0|Add5~6 , IIR_inst0|Add5~6, top, 1
instance = comp, \IIR_inst0|sample_in[6][12] , IIR_inst0|sample_in[6][12], top, 1
instance = comp, \IIR_inst0|Add0~8 , IIR_inst0|Add0~8, top, 1
instance = comp, \IIR_inst0|Add1~6 , IIR_inst0|Add1~6, top, 1
instance = comp, \IIR_inst0|Add2~6 , IIR_inst0|Add2~6, top, 1
instance = comp, \IIR_inst0|Add3~6 , IIR_inst0|Add3~6, top, 1
instance = comp, \IIR_inst0|sample_in[7][12]~feeder , IIR_inst0|sample_in[7][12]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[7][12] , IIR_inst0|sample_in[7][12], top, 1
instance = comp, \IIR_inst0|sample_in[8][12]~feeder , IIR_inst0|sample_in[8][12]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[8][12] , IIR_inst0|sample_in[8][12], top, 1
instance = comp, \IIR_inst0|sample_in[9][12] , IIR_inst0|sample_in[9][12], top, 1
instance = comp, \IIR_inst0|sample_in[10][12]~feeder , IIR_inst0|sample_in[10][12]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[10][12] , IIR_inst0|sample_in[10][12], top, 1
instance = comp, \IIR_inst0|Add4~8 , IIR_inst0|Add4~8, top, 1
instance = comp, \IIR_inst0|sample_in[11][12]~feeder , IIR_inst0|sample_in[11][12]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[11][12] , IIR_inst0|sample_in[11][12], top, 1
instance = comp, \IIR_inst0|Add5~8 , IIR_inst0|Add5~8, top, 1
instance = comp, \IIR_inst0|sample_in[6][13] , IIR_inst0|sample_in[6][13], top, 1
instance = comp, \IIR_inst0|sample_in[7][13]~feeder , IIR_inst0|sample_in[7][13]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[7][13] , IIR_inst0|sample_in[7][13], top, 1
instance = comp, \IIR_inst0|sample_in[8][13]~feeder , IIR_inst0|sample_in[8][13]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[8][13] , IIR_inst0|sample_in[8][13], top, 1
instance = comp, \IIR_inst0|sample_in[9][13]~feeder , IIR_inst0|sample_in[9][13]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[9][13] , IIR_inst0|sample_in[9][13], top, 1
instance = comp, \IIR_inst0|sample_in[10][13] , IIR_inst0|sample_in[10][13], top, 1
instance = comp, \IIR_inst0|sample_in[11][13] , IIR_inst0|sample_in[11][13], top, 1
instance = comp, \IIR_inst0|Add0~10 , IIR_inst0|Add0~10, top, 1
instance = comp, \IIR_inst0|Add1~8 , IIR_inst0|Add1~8, top, 1
instance = comp, \IIR_inst0|Add2~8 , IIR_inst0|Add2~8, top, 1
instance = comp, \IIR_inst0|Add3~8 , IIR_inst0|Add3~8, top, 1
instance = comp, \IIR_inst0|Add4~10 , IIR_inst0|Add4~10, top, 1
instance = comp, \IIR_inst0|Add5~10 , IIR_inst0|Add5~10, top, 1
instance = comp, \IIR_inst0|sample_in[6][14] , IIR_inst0|sample_in[6][14], top, 1
instance = comp, \IIR_inst0|sample_in[7][14]~feeder , IIR_inst0|sample_in[7][14]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[7][14] , IIR_inst0|sample_in[7][14], top, 1
instance = comp, \IIR_inst0|sample_in[8][14] , IIR_inst0|sample_in[8][14], top, 1
instance = comp, \IIR_inst0|sample_in[9][14] , IIR_inst0|sample_in[9][14], top, 1
instance = comp, \IIR_inst0|sample_in[10][14] , IIR_inst0|sample_in[10][14], top, 1
instance = comp, \IIR_inst0|sample_in[11][14] , IIR_inst0|sample_in[11][14], top, 1
instance = comp, \IIR_inst0|Add0~12 , IIR_inst0|Add0~12, top, 1
instance = comp, \IIR_inst0|Add1~10 , IIR_inst0|Add1~10, top, 1
instance = comp, \IIR_inst0|Add2~10 , IIR_inst0|Add2~10, top, 1
instance = comp, \IIR_inst0|Add3~10 , IIR_inst0|Add3~10, top, 1
instance = comp, \IIR_inst0|Add4~12 , IIR_inst0|Add4~12, top, 1
instance = comp, \IIR_inst0|Add5~12 , IIR_inst0|Add5~12, top, 1
instance = comp, \IIR_inst0|sample_in[6][15]~feeder , IIR_inst0|sample_in[6][15]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[6][15] , IIR_inst0|sample_in[6][15], top, 1
instance = comp, \IIR_inst0|sample_in[7][15] , IIR_inst0|sample_in[7][15], top, 1
instance = comp, \IIR_inst0|sample_in[8][15]~feeder , IIR_inst0|sample_in[8][15]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[8][15] , IIR_inst0|sample_in[8][15], top, 1
instance = comp, \IIR_inst0|sample_in[9][15]~feeder , IIR_inst0|sample_in[9][15]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[9][15] , IIR_inst0|sample_in[9][15], top, 1
instance = comp, \IIR_inst0|sample_in[10][15] , IIR_inst0|sample_in[10][15], top, 1
instance = comp, \IIR_inst0|Add0~14 , IIR_inst0|Add0~14, top, 1
instance = comp, \IIR_inst0|Add1~12 , IIR_inst0|Add1~12, top, 1
instance = comp, \IIR_inst0|Add2~12 , IIR_inst0|Add2~12, top, 1
instance = comp, \IIR_inst0|Add3~12 , IIR_inst0|Add3~12, top, 1
instance = comp, \IIR_inst0|Add4~14 , IIR_inst0|Add4~14, top, 1
instance = comp, \IIR_inst0|sample_in[11][15]~feeder , IIR_inst0|sample_in[11][15]~feeder, top, 1
instance = comp, \IIR_inst0|sample_in[11][15] , IIR_inst0|sample_in[11][15], top, 1
instance = comp, \IIR_inst0|Add5~14 , IIR_inst0|Add5~14, top, 1
instance = comp, \IIR_inst0|Add0~16 , IIR_inst0|Add0~16, top, 1
instance = comp, \IIR_inst0|Add1~14 , IIR_inst0|Add1~14, top, 1
instance = comp, \IIR_inst0|Add2~14 , IIR_inst0|Add2~14, top, 1
instance = comp, \IIR_inst0|Add3~14 , IIR_inst0|Add3~14, top, 1
instance = comp, \IIR_inst0|Add4~16 , IIR_inst0|Add4~16, top, 1
instance = comp, \IIR_inst0|Add5~16 , IIR_inst0|Add5~16, top, 1
instance = comp, \IIR_inst0|Add1~16 , IIR_inst0|Add1~16, top, 1
instance = comp, \IIR_inst0|Add2~16 , IIR_inst0|Add2~16, top, 1
instance = comp, \IIR_inst0|Add3~16 , IIR_inst0|Add3~16, top, 1
instance = comp, \IIR_inst0|Add4~18 , IIR_inst0|Add4~18, top, 1
instance = comp, \IIR_inst0|Add5~18 , IIR_inst0|Add5~18, top, 1
instance = comp, \IIR_inst0|Add2~18 , IIR_inst0|Add2~18, top, 1
instance = comp, \IIR_inst0|Add3~18 , IIR_inst0|Add3~18, top, 1
instance = comp, \IIR_inst0|Add4~20 , IIR_inst0|Add4~20, top, 1
instance = comp, \IIR_inst0|Add5~20 , IIR_inst0|Add5~20, top, 1
instance = comp, \dac_clk_reg[0]~feeder , dac_clk_reg[0]~feeder, top, 1
instance = comp, \dac_clk_reg[0] , dac_clk_reg[0], top, 1
instance = comp, \dac_clk_reg[1]~feeder , dac_clk_reg[1]~feeder, top, 1
instance = comp, \dac_clk_reg[1] , dac_clk_reg[1], top, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
